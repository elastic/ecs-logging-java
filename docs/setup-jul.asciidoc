[[setup-jul]]
== ECS formatter for JUL

Formatter for JUL (java.util.logging) which produce ECS-compatible records.
Useful for applications which use JUL as primary logging framework (e.g. Apache Tomcat).

[float]
=== Step 1: add dependency

Latest version: https://search.maven.org/search?q=g:co.elastic.logging%20AND%20a:jul-ecs-formatter[image:https://img.shields.io/maven-central/v/co.elastic.logging/jul-ecs-formatter.svg[Maven Central]]

Add a dependency to your application
[source,xml]
----
<dependency>
    <groupId>co.elastic.logging</groupId>
    <artifactId>jul-ecs-formatter</artifactId>
    <version>${ecs-logging-java.version}</version>
</dependency>
----

If you are not using a dependency management tool, like maven, you have to add both, `jul-ecs-formatter` and `ecs-logging-core` jars manually to the classpath. For example to the `$CATALINA_HOME/lib` directory.

[float]
=== Step 2: use the `EcsFormatter`

Specify `co.elastic.logging.jul.EcsFormatter` as `formatter` for the required log handler.

[float]
=== Example
For example `$CATALINA_HOME/conf/logging.properties`

[source]
----
java.util.logging.ConsoleHandler.level = FINE
java.util.logging.ConsoleHandler.formatter = co.elastic.logging.jul.EcsFormatter
co.elastic.logging.jul.EcsFormatter.serviceName=my-app
----

[float]
=== Layout Parameters

|===
|Parameter name   |Type   |Default |Description

|`serviceName`
|String
|
|Sets the `service.name` field so you can filter your logs by a particular service

|`eventDataset`
|String
|`${serviceName}.log`
|Sets the `event.dataset` field used by the machine learning job of the Logs app to look for anomalies in the log rate.

|`stackTraceAsArray`
|boolean
|`false`
|Serializes the https://www.elastic.co/guide/en/ecs/current/ecs-error.html[`error.stack_trace`] as a JSON array where each element is in a new line to improve readability. Note that this requires a slightly more complex [Filebeat configuration](../README.md#when-stacktraceasarray-is-enabled).

|`includeOrigin`
|boolean
|`false`
|If `true`, adds the https://www.elastic.co/guide/en/ecs/current/ecs-log.html[`log.origin.file.name`],
 https://www.elastic.co/guide/en/ecs/current/ecs-log.html[`log.origin.file.line`] and https://www.elastic.co/guide/en/ecs/current/ecs-log.html[`log.origin.function`] fields.
 Note that JUL does not stores line number and `log.origin.file.line` will have '1' value.
|===
